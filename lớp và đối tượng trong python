class ListNode:
    def __init__(self, data):
        self.data = data
        self.next = None

class LinkedList:
    def __init__(self):
        self.head = None

    def __len__(self):
        count = 0
        current = self.head
        while current:
            count += 1
            current = current.next
        return count

    def insert_first(self, value):
        new_node = ListNode(value)
        new_node.next = self.head
        self.head = new_node

    def insert(self, pos, value):
        if pos == 0:
            self.insert_first(value)
        else:
            new_node = ListNode(value)
            current = self.head
            for _ in range(pos - 1):
                if current.next is not None:
                    current = current.next
                else:
                    raise IndexError("Index out of range")
            new_node.next = current.next
            current.next = new_node

    def append(self, value):
        new_node = ListNode(value)
        if self.head is None:
            self.head = new_node
        else:
            current = self.head
            while current.next is not None:
                current = current.next
            current.next = new_node

    def delete(self, value):
        if self.head is None:
            return
        if self.head.data == value:
            self.head = self.head.next
            return
        current = self.head
        while current.next is not None:
            if current.next.data == value:
                current.next = current.next.next
                return
            current = current.next
        raise ValueError("Value not found in the list")

    def traversal(self):
        current = self.head
        while current is not None:
            print(current.data)
            current = current.next

# Thực hiện các thao tác
if __name__ == "__main__":
    linked_list = LinkedList()

    # Nhập vào 3 giá trị và chèn vào đầu danh sách
    for _ in range(3):
        value = int(input("Nhập giá trị để chèn vào đầu danh sách: "))
        linked_list.insert_first(value)

    # Nhập vào 1 giá trị và chèn vào cuối danh sách
    value = int(input("Nhập giá trị để chèn vào cuối danh sách: "))
    linked_list.append(value)

    # Nhập vào 1 giá trị và chèn vào vị trí 4 trong danh sách
    value = int(input("Nhập giá trị để chèn vào vị trí 4 trong danh sách: "))
    linked_list.insert(3, value)

    # Nhập vào 1 giá trị, tìm kiếm giá trị đó trong danh sách và xoá giá trị khỏi danh sách
    value = int(input("Nhập giá trị để xoá khỏi danh sách: "))
    linked_list.delete(value)

    # In các phần tử của danh sách
    print("Các phần tử của danh sách:")
    linked_list.traversal()

